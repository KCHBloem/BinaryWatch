
BinaryW2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000b8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000009bc  080000b8  080000b8  000100b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a74  08000a7c  00010a7c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a74  08000a74  00010a7c  2**0
                  CONTENTS
  4 .ARM          00000000  08000a74  08000a74  00010a7c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a74  08000a7c  00010a7c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a74  08000a74  00010a74  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a78  08000a78  00010a78  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010a7c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000a7c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000304  2000001c  08000a7c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00010a7c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000070f  00000000  00000000  00010aa4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000001e3  00000000  00000000  000111b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000080  00000000  00000000  00011398  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000080  00000000  00000000  00011418  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00009a5f  00000000  00000000  00011498  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000a6e  00000000  00000000  0001aef7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00032c6d  00000000  00000000  0001b965  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0004e5d2  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000130  00000000  00000000  0004e624  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000b8 <__do_global_dtors_aux>:
 80000b8:	b510      	push	{r4, lr}
 80000ba:	4c06      	ldr	r4, [pc, #24]	; (80000d4 <__do_global_dtors_aux+0x1c>)
 80000bc:	7823      	ldrb	r3, [r4, #0]
 80000be:	2b00      	cmp	r3, #0
 80000c0:	d107      	bne.n	80000d2 <__do_global_dtors_aux+0x1a>
 80000c2:	4b05      	ldr	r3, [pc, #20]	; (80000d8 <__do_global_dtors_aux+0x20>)
 80000c4:	2b00      	cmp	r3, #0
 80000c6:	d002      	beq.n	80000ce <__do_global_dtors_aux+0x16>
 80000c8:	4804      	ldr	r0, [pc, #16]	; (80000dc <__do_global_dtors_aux+0x24>)
 80000ca:	e000      	b.n	80000ce <__do_global_dtors_aux+0x16>
 80000cc:	bf00      	nop
 80000ce:	2301      	movs	r3, #1
 80000d0:	7023      	strb	r3, [r4, #0]
 80000d2:	bd10      	pop	{r4, pc}
 80000d4:	20000000 	.word	0x20000000
 80000d8:	00000000 	.word	0x00000000
 80000dc:	08000a5c 	.word	0x08000a5c

080000e0 <frame_dummy>:
 80000e0:	4b04      	ldr	r3, [pc, #16]	; (80000f4 <frame_dummy+0x14>)
 80000e2:	b510      	push	{r4, lr}
 80000e4:	2b00      	cmp	r3, #0
 80000e6:	d003      	beq.n	80000f0 <frame_dummy+0x10>
 80000e8:	4903      	ldr	r1, [pc, #12]	; (80000f8 <frame_dummy+0x18>)
 80000ea:	4804      	ldr	r0, [pc, #16]	; (80000fc <frame_dummy+0x1c>)
 80000ec:	e000      	b.n	80000f0 <frame_dummy+0x10>
 80000ee:	bf00      	nop
 80000f0:	bd10      	pop	{r4, pc}
 80000f2:	46c0      	nop			; (mov r8, r8)
 80000f4:	00000000 	.word	0x00000000
 80000f8:	20000004 	.word	0x20000004
 80000fc:	08000a5c 	.word	0x08000a5c

08000100 <main>:
  uint8_t MNU;
  uint8_t ST;
  uint8_t SU;
} Time;

int main(void) {
 8000100:	b580      	push	{r7, lr}
 8000102:	b084      	sub	sp, #16
 8000104:	af00      	add	r7, sp, #0

  SystemClockConfig();
 8000106:	f000 fc09 	bl	800091c <SystemClockConfig>
  GPIO_Init();
 800010a:	f000 fa09 	bl	8000520 <GPIO_Init>
  //LPUART_Init();
  RTC_Init();
 800010e:	f000 fa39 	bl	8000584 <RTC_Init>
  //printf("Binary Watch V1.0\r\n");

  Time time;
  uint8_t show = 0;
 8000112:	230f      	movs	r3, #15
 8000114:	18fb      	adds	r3, r7, r3
 8000116:	2200      	movs	r2, #0
 8000118:	701a      	strb	r2, [r3, #0]
  uint8_t old = 0, new;
 800011a:	230e      	movs	r3, #14
 800011c:	18fb      	adds	r3, r7, r3
 800011e:	2200      	movs	r2, #0
 8000120:	701a      	strb	r2, [r3, #0]

  while (1) {

    RTC->BKP0R = RTC->TR;
 8000122:	4adc      	ldr	r2, [pc, #880]	; (8000494 <main+0x394>)
 8000124:	4bdb      	ldr	r3, [pc, #876]	; (8000494 <main+0x394>)
 8000126:	6812      	ldr	r2, [r2, #0]
 8000128:	651a      	str	r2, [r3, #80]	; 0x50

    time.HT = ((RTC->BKP0R & 0x300000) >> 20);
 800012a:	4bda      	ldr	r3, [pc, #872]	; (8000494 <main+0x394>)
 800012c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800012e:	0d1b      	lsrs	r3, r3, #20
 8000130:	b2db      	uxtb	r3, r3
 8000132:	2203      	movs	r2, #3
 8000134:	4013      	ands	r3, r2
 8000136:	b2da      	uxtb	r2, r3
 8000138:	1d3b      	adds	r3, r7, #4
 800013a:	701a      	strb	r2, [r3, #0]
    time.HU = ((RTC->BKP0R & 0xF0000) >> 16);
 800013c:	4bd5      	ldr	r3, [pc, #852]	; (8000494 <main+0x394>)
 800013e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8000140:	0c1b      	lsrs	r3, r3, #16
 8000142:	b2db      	uxtb	r3, r3
 8000144:	220f      	movs	r2, #15
 8000146:	4013      	ands	r3, r2
 8000148:	b2da      	uxtb	r2, r3
 800014a:	1d3b      	adds	r3, r7, #4
 800014c:	705a      	strb	r2, [r3, #1]
    time.MNT = ((RTC->BKP0R & 0x7000) >> 12);
 800014e:	4bd1      	ldr	r3, [pc, #836]	; (8000494 <main+0x394>)
 8000150:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8000152:	0b1b      	lsrs	r3, r3, #12
 8000154:	b2db      	uxtb	r3, r3
 8000156:	2207      	movs	r2, #7
 8000158:	4013      	ands	r3, r2
 800015a:	b2da      	uxtb	r2, r3
 800015c:	1d3b      	adds	r3, r7, #4
 800015e:	709a      	strb	r2, [r3, #2]
    time.MNU = ((RTC->BKP0R & 0xF00) >> 8);
 8000160:	4bcc      	ldr	r3, [pc, #816]	; (8000494 <main+0x394>)
 8000162:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8000164:	0a1b      	lsrs	r3, r3, #8
 8000166:	b2db      	uxtb	r3, r3
 8000168:	220f      	movs	r2, #15
 800016a:	4013      	ands	r3, r2
 800016c:	b2da      	uxtb	r2, r3
 800016e:	1d3b      	adds	r3, r7, #4
 8000170:	70da      	strb	r2, [r3, #3]
    time.ST = ((RTC->BKP0R & 0x70) >> 4);
 8000172:	4bc8      	ldr	r3, [pc, #800]	; (8000494 <main+0x394>)
 8000174:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8000176:	091b      	lsrs	r3, r3, #4
 8000178:	b2db      	uxtb	r3, r3
 800017a:	2207      	movs	r2, #7
 800017c:	4013      	ands	r3, r2
 800017e:	b2da      	uxtb	r2, r3
 8000180:	1d3b      	adds	r3, r7, #4
 8000182:	711a      	strb	r2, [r3, #4]
    time.SU = ((RTC->BKP0R & 0x0F));
 8000184:	4bc3      	ldr	r3, [pc, #780]	; (8000494 <main+0x394>)
 8000186:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8000188:	b2db      	uxtb	r3, r3
 800018a:	220f      	movs	r2, #15
 800018c:	4013      	ands	r3, r2
 800018e:	b2da      	uxtb	r2, r3
 8000190:	1d3b      	adds	r3, r7, #4
 8000192:	715a      	strb	r2, [r3, #5]
    new = time.SU;
 8000194:	210c      	movs	r1, #12
 8000196:	187b      	adds	r3, r7, r1
 8000198:	1d3a      	adds	r2, r7, #4
 800019a:	7952      	ldrb	r2, [r2, #5]
 800019c:	701a      	strb	r2, [r3, #0]

    if (old != new) {
 800019e:	200e      	movs	r0, #14
 80001a0:	183a      	adds	r2, r7, r0
 80001a2:	187b      	adds	r3, r7, r1
 80001a4:	7812      	ldrb	r2, [r2, #0]
 80001a6:	781b      	ldrb	r3, [r3, #0]
 80001a8:	429a      	cmp	r2, r3
 80001aa:	d100      	bne.n	80001ae <main+0xae>
 80001ac:	e092      	b.n	80002d4 <main+0x1d4>
      old = new;
 80001ae:	183b      	adds	r3, r7, r0
 80001b0:	187a      	adds	r2, r7, r1
 80001b2:	7812      	ldrb	r2, [r2, #0]
 80001b4:	701a      	strb	r2, [r3, #0]
      //printf("%d:%d:%d\r\n", ((time.HT * 10) + (time.HU)), ((time.MNT * 10) + time.MNU), ((time.ST * 10) + time.SU));
      if (show) {
 80001b6:	230f      	movs	r3, #15
 80001b8:	18fb      	adds	r3, r7, r3
 80001ba:	781b      	ldrb	r3, [r3, #0]
 80001bc:	2b00      	cmp	r3, #0
 80001be:	d100      	bne.n	80001c2 <main+0xc2>
 80001c0:	e088      	b.n	80002d4 <main+0x1d4>
        GPIO_State(GPIOB, 5, (time.HT & 0x01));
 80001c2:	1d3b      	adds	r3, r7, #4
 80001c4:	781b      	ldrb	r3, [r3, #0]
 80001c6:	2201      	movs	r2, #1
 80001c8:	4013      	ands	r3, r2
 80001ca:	b2db      	uxtb	r3, r3
 80001cc:	48b2      	ldr	r0, [pc, #712]	; (8000498 <main+0x398>)
 80001ce:	001a      	movs	r2, r3
 80001d0:	2105      	movs	r1, #5
 80001d2:	f000 f97b 	bl	80004cc <GPIO_State>
        GPIO_State(GPIOB, 6, (time.HT & 0x02));
 80001d6:	1d3b      	adds	r3, r7, #4
 80001d8:	781b      	ldrb	r3, [r3, #0]
 80001da:	2202      	movs	r2, #2
 80001dc:	4013      	ands	r3, r2
 80001de:	b2db      	uxtb	r3, r3
 80001e0:	48ad      	ldr	r0, [pc, #692]	; (8000498 <main+0x398>)
 80001e2:	001a      	movs	r2, r3
 80001e4:	2106      	movs	r1, #6
 80001e6:	f000 f971 	bl	80004cc <GPIO_State>

        GPIO_State(GPIOB, 4, (time.HU & 0x01));
 80001ea:	1d3b      	adds	r3, r7, #4
 80001ec:	785b      	ldrb	r3, [r3, #1]
 80001ee:	2201      	movs	r2, #1
 80001f0:	4013      	ands	r3, r2
 80001f2:	b2db      	uxtb	r3, r3
 80001f4:	48a8      	ldr	r0, [pc, #672]	; (8000498 <main+0x398>)
 80001f6:	001a      	movs	r2, r3
 80001f8:	2104      	movs	r1, #4
 80001fa:	f000 f967 	bl	80004cc <GPIO_State>
        GPIO_State(GPIOA, 8, (time.HU & 0x02));
 80001fe:	1d3b      	adds	r3, r7, #4
 8000200:	785b      	ldrb	r3, [r3, #1]
 8000202:	2202      	movs	r2, #2
 8000204:	4013      	ands	r3, r2
 8000206:	b2da      	uxtb	r2, r3
 8000208:	23a0      	movs	r3, #160	; 0xa0
 800020a:	05db      	lsls	r3, r3, #23
 800020c:	2108      	movs	r1, #8
 800020e:	0018      	movs	r0, r3
 8000210:	f000 f95c 	bl	80004cc <GPIO_State>
        GPIO_State(GPIOA, 0, (time.HU & 0x04));
 8000214:	1d3b      	adds	r3, r7, #4
 8000216:	785b      	ldrb	r3, [r3, #1]
 8000218:	2204      	movs	r2, #4
 800021a:	4013      	ands	r3, r2
 800021c:	b2da      	uxtb	r2, r3
 800021e:	23a0      	movs	r3, #160	; 0xa0
 8000220:	05db      	lsls	r3, r3, #23
 8000222:	2100      	movs	r1, #0
 8000224:	0018      	movs	r0, r3
 8000226:	f000 f951 	bl	80004cc <GPIO_State>
        GPIO_State(GPIOA, 1, (time.HU & 0x08));
 800022a:	1d3b      	adds	r3, r7, #4
 800022c:	785b      	ldrb	r3, [r3, #1]
 800022e:	2208      	movs	r2, #8
 8000230:	4013      	ands	r3, r2
 8000232:	b2da      	uxtb	r2, r3
 8000234:	23a0      	movs	r3, #160	; 0xa0
 8000236:	05db      	lsls	r3, r3, #23
 8000238:	2101      	movs	r1, #1
 800023a:	0018      	movs	r0, r3
 800023c:	f000 f946 	bl	80004cc <GPIO_State>

        GPIO_State(GPIOB, 3, (time.MNT & 0x01));
 8000240:	1d3b      	adds	r3, r7, #4
 8000242:	789b      	ldrb	r3, [r3, #2]
 8000244:	2201      	movs	r2, #1
 8000246:	4013      	ands	r3, r2
 8000248:	b2db      	uxtb	r3, r3
 800024a:	4893      	ldr	r0, [pc, #588]	; (8000498 <main+0x398>)
 800024c:	001a      	movs	r2, r3
 800024e:	2103      	movs	r1, #3
 8000250:	f000 f93c 	bl	80004cc <GPIO_State>
        GPIO_State(GPIOB, 1, (time.MNT & 0x02));
 8000254:	1d3b      	adds	r3, r7, #4
 8000256:	789b      	ldrb	r3, [r3, #2]
 8000258:	2202      	movs	r2, #2
 800025a:	4013      	ands	r3, r2
 800025c:	b2db      	uxtb	r3, r3
 800025e:	488e      	ldr	r0, [pc, #568]	; (8000498 <main+0x398>)
 8000260:	001a      	movs	r2, r3
 8000262:	2101      	movs	r1, #1
 8000264:	f000 f932 	bl	80004cc <GPIO_State>
        GPIO_State(GPIOB, 0, (time.MNT & 0x04));
 8000268:	1d3b      	adds	r3, r7, #4
 800026a:	789b      	ldrb	r3, [r3, #2]
 800026c:	2204      	movs	r2, #4
 800026e:	4013      	ands	r3, r2
 8000270:	b2db      	uxtb	r3, r3
 8000272:	4889      	ldr	r0, [pc, #548]	; (8000498 <main+0x398>)
 8000274:	001a      	movs	r2, r3
 8000276:	2100      	movs	r1, #0
 8000278:	f000 f928 	bl	80004cc <GPIO_State>

        GPIO_State(GPIOA, 15, (time.MNU & 0x01));
 800027c:	1d3b      	adds	r3, r7, #4
 800027e:	78db      	ldrb	r3, [r3, #3]
 8000280:	2201      	movs	r2, #1
 8000282:	4013      	ands	r3, r2
 8000284:	b2da      	uxtb	r2, r3
 8000286:	23a0      	movs	r3, #160	; 0xa0
 8000288:	05db      	lsls	r3, r3, #23
 800028a:	210f      	movs	r1, #15
 800028c:	0018      	movs	r0, r3
 800028e:	f000 f91d 	bl	80004cc <GPIO_State>
        GPIO_State(GPIOA, 11, (time.MNU & 0x02));
 8000292:	1d3b      	adds	r3, r7, #4
 8000294:	78db      	ldrb	r3, [r3, #3]
 8000296:	2202      	movs	r2, #2
 8000298:	4013      	ands	r3, r2
 800029a:	b2da      	uxtb	r2, r3
 800029c:	23a0      	movs	r3, #160	; 0xa0
 800029e:	05db      	lsls	r3, r3, #23
 80002a0:	210b      	movs	r1, #11
 80002a2:	0018      	movs	r0, r3
 80002a4:	f000 f912 	bl	80004cc <GPIO_State>
        GPIO_State(GPIOA, 10, (time.MNU & 0x04));
 80002a8:	1d3b      	adds	r3, r7, #4
 80002aa:	78db      	ldrb	r3, [r3, #3]
 80002ac:	2204      	movs	r2, #4
 80002ae:	4013      	ands	r3, r2
 80002b0:	b2da      	uxtb	r2, r3
 80002b2:	23a0      	movs	r3, #160	; 0xa0
 80002b4:	05db      	lsls	r3, r3, #23
 80002b6:	210a      	movs	r1, #10
 80002b8:	0018      	movs	r0, r3
 80002ba:	f000 f907 	bl	80004cc <GPIO_State>
        GPIO_State(GPIOA, 9, (time.MNU & 0x08));
 80002be:	1d3b      	adds	r3, r7, #4
 80002c0:	78db      	ldrb	r3, [r3, #3]
 80002c2:	2208      	movs	r2, #8
 80002c4:	4013      	ands	r3, r2
 80002c6:	b2da      	uxtb	r2, r3
 80002c8:	23a0      	movs	r3, #160	; 0xa0
 80002ca:	05db      	lsls	r3, r3, #23
 80002cc:	2109      	movs	r1, #9
 80002ce:	0018      	movs	r0, r3
 80002d0:	f000 f8fc 	bl	80004cc <GPIO_State>
      }
    }

    if (BUTTON_PRESSED && (show == 0)) {
 80002d4:	23a0      	movs	r3, #160	; 0xa0
 80002d6:	05db      	lsls	r3, r3, #23
 80002d8:	691b      	ldr	r3, [r3, #16]
 80002da:	2204      	movs	r2, #4
 80002dc:	4013      	ands	r3, r2
 80002de:	d000      	beq.n	80002e2 <main+0x1e2>
 80002e0:	e0bb      	b.n	800045a <main+0x35a>
 80002e2:	220f      	movs	r2, #15
 80002e4:	18bb      	adds	r3, r7, r2
 80002e6:	781b      	ldrb	r3, [r3, #0]
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	d000      	beq.n	80002ee <main+0x1ee>
 80002ec:	e0b5      	b.n	800045a <main+0x35a>
      show = 1;
 80002ee:	18bb      	adds	r3, r7, r2
 80002f0:	2201      	movs	r2, #1
 80002f2:	701a      	strb	r2, [r3, #0]
      GPIO_State(GPIOB, 5, (time.HT & 0x01));
 80002f4:	1d3b      	adds	r3, r7, #4
 80002f6:	781b      	ldrb	r3, [r3, #0]
 80002f8:	2201      	movs	r2, #1
 80002fa:	4013      	ands	r3, r2
 80002fc:	b2db      	uxtb	r3, r3
 80002fe:	4866      	ldr	r0, [pc, #408]	; (8000498 <main+0x398>)
 8000300:	001a      	movs	r2, r3
 8000302:	2105      	movs	r1, #5
 8000304:	f000 f8e2 	bl	80004cc <GPIO_State>
      GPIO_State(GPIOB, 6, (time.HT & 0x02));
 8000308:	1d3b      	adds	r3, r7, #4
 800030a:	781b      	ldrb	r3, [r3, #0]
 800030c:	2202      	movs	r2, #2
 800030e:	4013      	ands	r3, r2
 8000310:	b2db      	uxtb	r3, r3
 8000312:	4861      	ldr	r0, [pc, #388]	; (8000498 <main+0x398>)
 8000314:	001a      	movs	r2, r3
 8000316:	2106      	movs	r1, #6
 8000318:	f000 f8d8 	bl	80004cc <GPIO_State>

      GPIO_State(GPIOB, 4, (time.HU & 0x01));
 800031c:	1d3b      	adds	r3, r7, #4
 800031e:	785b      	ldrb	r3, [r3, #1]
 8000320:	2201      	movs	r2, #1
 8000322:	4013      	ands	r3, r2
 8000324:	b2db      	uxtb	r3, r3
 8000326:	485c      	ldr	r0, [pc, #368]	; (8000498 <main+0x398>)
 8000328:	001a      	movs	r2, r3
 800032a:	2104      	movs	r1, #4
 800032c:	f000 f8ce 	bl	80004cc <GPIO_State>
      GPIO_State(GPIOA, 8, (time.HU & 0x02));
 8000330:	1d3b      	adds	r3, r7, #4
 8000332:	785b      	ldrb	r3, [r3, #1]
 8000334:	2202      	movs	r2, #2
 8000336:	4013      	ands	r3, r2
 8000338:	b2da      	uxtb	r2, r3
 800033a:	23a0      	movs	r3, #160	; 0xa0
 800033c:	05db      	lsls	r3, r3, #23
 800033e:	2108      	movs	r1, #8
 8000340:	0018      	movs	r0, r3
 8000342:	f000 f8c3 	bl	80004cc <GPIO_State>
      GPIO_State(GPIOA, 0, (time.HU & 0x04));
 8000346:	1d3b      	adds	r3, r7, #4
 8000348:	785b      	ldrb	r3, [r3, #1]
 800034a:	2204      	movs	r2, #4
 800034c:	4013      	ands	r3, r2
 800034e:	b2da      	uxtb	r2, r3
 8000350:	23a0      	movs	r3, #160	; 0xa0
 8000352:	05db      	lsls	r3, r3, #23
 8000354:	2100      	movs	r1, #0
 8000356:	0018      	movs	r0, r3
 8000358:	f000 f8b8 	bl	80004cc <GPIO_State>
      GPIO_State(GPIOA, 1, (time.HU & 0x08));
 800035c:	1d3b      	adds	r3, r7, #4
 800035e:	785b      	ldrb	r3, [r3, #1]
 8000360:	2208      	movs	r2, #8
 8000362:	4013      	ands	r3, r2
 8000364:	b2da      	uxtb	r2, r3
 8000366:	23a0      	movs	r3, #160	; 0xa0
 8000368:	05db      	lsls	r3, r3, #23
 800036a:	2101      	movs	r1, #1
 800036c:	0018      	movs	r0, r3
 800036e:	f000 f8ad 	bl	80004cc <GPIO_State>

      GPIO_State(GPIOB, 3, (time.MNT & 0x01));
 8000372:	1d3b      	adds	r3, r7, #4
 8000374:	789b      	ldrb	r3, [r3, #2]
 8000376:	2201      	movs	r2, #1
 8000378:	4013      	ands	r3, r2
 800037a:	b2db      	uxtb	r3, r3
 800037c:	4846      	ldr	r0, [pc, #280]	; (8000498 <main+0x398>)
 800037e:	001a      	movs	r2, r3
 8000380:	2103      	movs	r1, #3
 8000382:	f000 f8a3 	bl	80004cc <GPIO_State>
      GPIO_State(GPIOB, 1, (time.MNT & 0x02));
 8000386:	1d3b      	adds	r3, r7, #4
 8000388:	789b      	ldrb	r3, [r3, #2]
 800038a:	2202      	movs	r2, #2
 800038c:	4013      	ands	r3, r2
 800038e:	b2db      	uxtb	r3, r3
 8000390:	4841      	ldr	r0, [pc, #260]	; (8000498 <main+0x398>)
 8000392:	001a      	movs	r2, r3
 8000394:	2101      	movs	r1, #1
 8000396:	f000 f899 	bl	80004cc <GPIO_State>
      GPIO_State(GPIOB, 0, (time.MNT & 0x04));
 800039a:	1d3b      	adds	r3, r7, #4
 800039c:	789b      	ldrb	r3, [r3, #2]
 800039e:	2204      	movs	r2, #4
 80003a0:	4013      	ands	r3, r2
 80003a2:	b2db      	uxtb	r3, r3
 80003a4:	483c      	ldr	r0, [pc, #240]	; (8000498 <main+0x398>)
 80003a6:	001a      	movs	r2, r3
 80003a8:	2100      	movs	r1, #0
 80003aa:	f000 f88f 	bl	80004cc <GPIO_State>

      GPIO_State(GPIOA, 15, (time.MNU & 0x01));
 80003ae:	1d3b      	adds	r3, r7, #4
 80003b0:	78db      	ldrb	r3, [r3, #3]
 80003b2:	2201      	movs	r2, #1
 80003b4:	4013      	ands	r3, r2
 80003b6:	b2da      	uxtb	r2, r3
 80003b8:	23a0      	movs	r3, #160	; 0xa0
 80003ba:	05db      	lsls	r3, r3, #23
 80003bc:	210f      	movs	r1, #15
 80003be:	0018      	movs	r0, r3
 80003c0:	f000 f884 	bl	80004cc <GPIO_State>
      GPIO_State(GPIOA, 11, (time.MNU & 0x02));
 80003c4:	1d3b      	adds	r3, r7, #4
 80003c6:	78db      	ldrb	r3, [r3, #3]
 80003c8:	2202      	movs	r2, #2
 80003ca:	4013      	ands	r3, r2
 80003cc:	b2da      	uxtb	r2, r3
 80003ce:	23a0      	movs	r3, #160	; 0xa0
 80003d0:	05db      	lsls	r3, r3, #23
 80003d2:	210b      	movs	r1, #11
 80003d4:	0018      	movs	r0, r3
 80003d6:	f000 f879 	bl	80004cc <GPIO_State>
      GPIO_State(GPIOA, 10, (time.MNU & 0x04));
 80003da:	1d3b      	adds	r3, r7, #4
 80003dc:	78db      	ldrb	r3, [r3, #3]
 80003de:	2204      	movs	r2, #4
 80003e0:	4013      	ands	r3, r2
 80003e2:	b2da      	uxtb	r2, r3
 80003e4:	23a0      	movs	r3, #160	; 0xa0
 80003e6:	05db      	lsls	r3, r3, #23
 80003e8:	210a      	movs	r1, #10
 80003ea:	0018      	movs	r0, r3
 80003ec:	f000 f86e 	bl	80004cc <GPIO_State>
      GPIO_State(GPIOA, 9, (time.MNU & 0x08));
 80003f0:	1d3b      	adds	r3, r7, #4
 80003f2:	78db      	ldrb	r3, [r3, #3]
 80003f4:	2208      	movs	r2, #8
 80003f6:	4013      	ands	r3, r2
 80003f8:	b2da      	uxtb	r2, r3
 80003fa:	23a0      	movs	r3, #160	; 0xa0
 80003fc:	05db      	lsls	r3, r3, #23
 80003fe:	2109      	movs	r1, #9
 8000400:	0018      	movs	r0, r3
 8000402:	f000 f863 	bl	80004cc <GPIO_State>
      Delay(500);
 8000406:	23fa      	movs	r3, #250	; 0xfa
 8000408:	005b      	lsls	r3, r3, #1
 800040a:	0018      	movs	r0, r3
 800040c:	f000 f846 	bl	800049c <Delay>
      for (uint8_t i = 0; i <= 30; i++) {
 8000410:	230d      	movs	r3, #13
 8000412:	18fb      	adds	r3, r7, r3
 8000414:	2200      	movs	r2, #0
 8000416:	701a      	strb	r2, [r3, #0]
 8000418:	e019      	b.n	800044e <main+0x34e>
        if (BUTTON_PRESSED) {
 800041a:	23a0      	movs	r3, #160	; 0xa0
 800041c:	05db      	lsls	r3, r3, #23
 800041e:	691b      	ldr	r3, [r3, #16]
 8000420:	2204      	movs	r2, #4
 8000422:	4013      	ands	r3, r2
 8000424:	d107      	bne.n	8000436 <main+0x336>
          Delay(100);
 8000426:	2064      	movs	r0, #100	; 0x64
 8000428:	f000 f838 	bl	800049c <Delay>
          show = 2;
 800042c:	230f      	movs	r3, #15
 800042e:	18fb      	adds	r3, r7, r3
 8000430:	2202      	movs	r2, #2
 8000432:	701a      	strb	r2, [r3, #0]
 8000434:	e005      	b.n	8000442 <main+0x342>
        } else {
          show = 1;
 8000436:	230f      	movs	r3, #15
 8000438:	18fb      	adds	r3, r7, r3
 800043a:	2201      	movs	r2, #1
 800043c:	701a      	strb	r2, [r3, #0]
          break;
 800043e:	46c0      	nop			; (mov r8, r8)
      for (uint8_t i = 0; i <= 30; i++) {
 8000440:	e027      	b.n	8000492 <main+0x392>
 8000442:	210d      	movs	r1, #13
 8000444:	187b      	adds	r3, r7, r1
 8000446:	781a      	ldrb	r2, [r3, #0]
 8000448:	187b      	adds	r3, r7, r1
 800044a:	3201      	adds	r2, #1
 800044c:	701a      	strb	r2, [r3, #0]
 800044e:	230d      	movs	r3, #13
 8000450:	18fb      	adds	r3, r7, r3
 8000452:	781b      	ldrb	r3, [r3, #0]
 8000454:	2b1e      	cmp	r3, #30
 8000456:	d9e0      	bls.n	800041a <main+0x31a>
 8000458:	e01b      	b.n	8000492 <main+0x392>
        }
      }

    } else if (BUTTON_PRESSED && (show == 1)) {
 800045a:	23a0      	movs	r3, #160	; 0xa0
 800045c:	05db      	lsls	r3, r3, #23
 800045e:	691b      	ldr	r3, [r3, #16]
 8000460:	2204      	movs	r2, #4
 8000462:	4013      	ands	r3, r2
 8000464:	d000      	beq.n	8000468 <main+0x368>
 8000466:	e65c      	b.n	8000122 <main+0x22>
 8000468:	220f      	movs	r2, #15
 800046a:	18bb      	adds	r3, r7, r2
 800046c:	781b      	ldrb	r3, [r3, #0]
 800046e:	2b01      	cmp	r3, #1
 8000470:	d000      	beq.n	8000474 <main+0x374>
 8000472:	e656      	b.n	8000122 <main+0x22>
      show = 0;
 8000474:	18bb      	adds	r3, r7, r2
 8000476:	2200      	movs	r2, #0
 8000478:	701a      	strb	r2, [r3, #0]
      GPIOA_OFF;
 800047a:	23a0      	movs	r3, #160	; 0xa0
 800047c:	05db      	lsls	r3, r3, #23
 800047e:	2200      	movs	r2, #0
 8000480:	615a      	str	r2, [r3, #20]
      GPIOB_OFF;
 8000482:	4b05      	ldr	r3, [pc, #20]	; (8000498 <main+0x398>)
 8000484:	2200      	movs	r2, #0
 8000486:	615a      	str	r2, [r3, #20]
      Delay(500);
 8000488:	23fa      	movs	r3, #250	; 0xfa
 800048a:	005b      	lsls	r3, r3, #1
 800048c:	0018      	movs	r0, r3
 800048e:	f000 f805 	bl	800049c <Delay>
    RTC->BKP0R = RTC->TR;
 8000492:	e646      	b.n	8000122 <main+0x22>
 8000494:	40002800 	.word	0x40002800
 8000498:	50000400 	.word	0x50000400

0800049c <Delay>:
    }

  }
}

void Delay(uint32_t ms) {
 800049c:	b580      	push	{r7, lr}
 800049e:	b082      	sub	sp, #8
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	6078      	str	r0, [r7, #4]
  ms *= 1000;
 80004a4:	687a      	ldr	r2, [r7, #4]
 80004a6:	0013      	movs	r3, r2
 80004a8:	015b      	lsls	r3, r3, #5
 80004aa:	1a9b      	subs	r3, r3, r2
 80004ac:	009b      	lsls	r3, r3, #2
 80004ae:	189b      	adds	r3, r3, r2
 80004b0:	00db      	lsls	r3, r3, #3
 80004b2:	607b      	str	r3, [r7, #4]
  while (ms--) {
 80004b4:	e000      	b.n	80004b8 <Delay+0x1c>
    __NOP();
 80004b6:	46c0      	nop			; (mov r8, r8)
  while (ms--) {
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	1e5a      	subs	r2, r3, #1
 80004bc:	607a      	str	r2, [r7, #4]
 80004be:	2b00      	cmp	r3, #0
 80004c0:	d1f9      	bne.n	80004b6 <Delay+0x1a>
  }
}
 80004c2:	46c0      	nop			; (mov r8, r8)
 80004c4:	46c0      	nop			; (mov r8, r8)
 80004c6:	46bd      	mov	sp, r7
 80004c8:	b002      	add	sp, #8
 80004ca:	bd80      	pop	{r7, pc}

080004cc <GPIO_State>:
  while (!(LPUART1->ISR & (0x01 << 6))) {
  }
  return ch;
}

void GPIO_State(GPIO_TypeDef *PORT, uint8_t pin, uint8_t state) {
 80004cc:	b580      	push	{r7, lr}
 80004ce:	b082      	sub	sp, #8
 80004d0:	af00      	add	r7, sp, #0
 80004d2:	6078      	str	r0, [r7, #4]
 80004d4:	0008      	movs	r0, r1
 80004d6:	0011      	movs	r1, r2
 80004d8:	1cfb      	adds	r3, r7, #3
 80004da:	1c02      	adds	r2, r0, #0
 80004dc:	701a      	strb	r2, [r3, #0]
 80004de:	1cbb      	adds	r3, r7, #2
 80004e0:	1c0a      	adds	r2, r1, #0
 80004e2:	701a      	strb	r2, [r3, #0]
  if (state) {
 80004e4:	1cbb      	adds	r3, r7, #2
 80004e6:	781b      	ldrb	r3, [r3, #0]
 80004e8:	2b00      	cmp	r3, #0
 80004ea:	d00a      	beq.n	8000502 <GPIO_State+0x36>
    PORT->ODR |= (0x01 << pin);
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	695b      	ldr	r3, [r3, #20]
 80004f0:	1cfa      	adds	r2, r7, #3
 80004f2:	7812      	ldrb	r2, [r2, #0]
 80004f4:	2101      	movs	r1, #1
 80004f6:	4091      	lsls	r1, r2
 80004f8:	000a      	movs	r2, r1
 80004fa:	431a      	orrs	r2, r3
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	615a      	str	r2, [r3, #20]
  } else {
    PORT->ODR &= ~(0x01 << pin);
  }
}
 8000500:	e00a      	b.n	8000518 <GPIO_State+0x4c>
    PORT->ODR &= ~(0x01 << pin);
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	695b      	ldr	r3, [r3, #20]
 8000506:	1cfa      	adds	r2, r7, #3
 8000508:	7812      	ldrb	r2, [r2, #0]
 800050a:	2101      	movs	r1, #1
 800050c:	4091      	lsls	r1, r2
 800050e:	000a      	movs	r2, r1
 8000510:	43d2      	mvns	r2, r2
 8000512:	401a      	ands	r2, r3
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	615a      	str	r2, [r3, #20]
}
 8000518:	46c0      	nop			; (mov r8, r8)
 800051a:	46bd      	mov	sp, r7
 800051c:	b002      	add	sp, #8
 800051e:	bd80      	pop	{r7, pc}

08000520 <GPIO_Init>:

void GPIO_Init(void) {
 8000520:	b580      	push	{r7, lr}
 8000522:	af00      	add	r7, sp, #0
  RCC->IOPENR |= RCC_IOPENR_IOPAEN; /* Enable GPIO Clock for PORT A */
 8000524:	4b13      	ldr	r3, [pc, #76]	; (8000574 <GPIO_Init+0x54>)
 8000526:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000528:	4b12      	ldr	r3, [pc, #72]	; (8000574 <GPIO_Init+0x54>)
 800052a:	2101      	movs	r1, #1
 800052c:	430a      	orrs	r2, r1
 800052e:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC->IOPENR |= RCC_IOPENR_IOPBEN; /* Enable GPIO Clock for PORT B */
 8000530:	4b10      	ldr	r3, [pc, #64]	; (8000574 <GPIO_Init+0x54>)
 8000532:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000534:	4b0f      	ldr	r3, [pc, #60]	; (8000574 <GPIO_Init+0x54>)
 8000536:	2102      	movs	r1, #2
 8000538:	430a      	orrs	r2, r1
 800053a:	62da      	str	r2, [r3, #44]	; 0x2c

  GPIOA->MODER = (0x6B55FE85);
 800053c:	23a0      	movs	r3, #160	; 0xa0
 800053e:	05db      	lsls	r3, r3, #23
 8000540:	4a0d      	ldr	r2, [pc, #52]	; (8000578 <GPIO_Init+0x58>)
 8000542:	601a      	str	r2, [r3, #0]
   * A5: Reset State              |   A13: Alternate Function Mode (SWD)
   * A6: Reset State              |   A14: Alternate Function Mode (SWD)
   * A7: Reset State              |   A15: Output Mode
   */

  GPIOA->AFR[0] |= (0x06 << 12); /* AF6 on Pin A3 */
 8000544:	23a0      	movs	r3, #160	; 0xa0
 8000546:	05db      	lsls	r3, r3, #23
 8000548:	6a1a      	ldr	r2, [r3, #32]
 800054a:	23a0      	movs	r3, #160	; 0xa0
 800054c:	05db      	lsls	r3, r3, #23
 800054e:	21c0      	movs	r1, #192	; 0xc0
 8000550:	01c9      	lsls	r1, r1, #7
 8000552:	430a      	orrs	r2, r1
 8000554:	621a      	str	r2, [r3, #32]
  GPIOA->AFR[0] |= (0x06 << 16); /* AF6 on Pin A4 */
 8000556:	23a0      	movs	r3, #160	; 0xa0
 8000558:	05db      	lsls	r3, r3, #23
 800055a:	6a1a      	ldr	r2, [r3, #32]
 800055c:	23a0      	movs	r3, #160	; 0xa0
 800055e:	05db      	lsls	r3, r3, #23
 8000560:	21c0      	movs	r1, #192	; 0xc0
 8000562:	02c9      	lsls	r1, r1, #11
 8000564:	430a      	orrs	r2, r1
 8000566:	621a      	str	r2, [r3, #32]

  GPIOB->MODER = (0xFFFFD555);
 8000568:	4b04      	ldr	r3, [pc, #16]	; (800057c <GPIO_Init+0x5c>)
 800056a:	4a05      	ldr	r2, [pc, #20]	; (8000580 <GPIO_Init+0x60>)
 800056c:	601a      	str	r2, [r3, #0]
   * B5: Output Mode
   * B6: Output Mode
   * B7: Reset State
   */

}
 800056e:	46c0      	nop			; (mov r8, r8)
 8000570:	46bd      	mov	sp, r7
 8000572:	bd80      	pop	{r7, pc}
 8000574:	40021000 	.word	0x40021000
 8000578:	6b55fe85 	.word	0x6b55fe85
 800057c:	50000400 	.word	0x50000400
 8000580:	ffffd555 	.word	0xffffd555

08000584 <RTC_Init>:
  LPUART1->CR1 |= (0x01 << 3); /* Transmitter Enable */
  LPUART1->CR1 |= (0x01 << 0); /* LPUART Enable */
//LPUART1->CR1 |= USART_CR1_UESM;
}

void RTC_Init(void) {
 8000584:	b580      	push	{r7, lr}
 8000586:	b082      	sub	sp, #8
 8000588:	af00      	add	r7, sp, #0

  RCC->APB1ENR |= RCC_APB1ENR_PWREN; /* Power Interface Clock Enable */
 800058a:	4bdb      	ldr	r3, [pc, #876]	; (80008f8 <RTC_Init+0x374>)
 800058c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800058e:	4bda      	ldr	r3, [pc, #872]	; (80008f8 <RTC_Init+0x374>)
 8000590:	2180      	movs	r1, #128	; 0x80
 8000592:	0549      	lsls	r1, r1, #21
 8000594:	430a      	orrs	r2, r1
 8000596:	639a      	str	r2, [r3, #56]	; 0x38
  PWR->CR |= PWR_CR_DBP; /* Unlock Access to CSR */
 8000598:	4bd8      	ldr	r3, [pc, #864]	; (80008fc <RTC_Init+0x378>)
 800059a:	681a      	ldr	r2, [r3, #0]
 800059c:	4bd7      	ldr	r3, [pc, #860]	; (80008fc <RTC_Init+0x378>)
 800059e:	2180      	movs	r1, #128	; 0x80
 80005a0:	0049      	lsls	r1, r1, #1
 80005a2:	430a      	orrs	r2, r1
 80005a4:	601a      	str	r2, [r3, #0]
  RCC->CSR |= RCC_CSR_LSEDRV;
 80005a6:	4bd4      	ldr	r3, [pc, #848]	; (80008f8 <RTC_Init+0x374>)
 80005a8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80005aa:	4bd3      	ldr	r3, [pc, #844]	; (80008f8 <RTC_Init+0x374>)
 80005ac:	21c0      	movs	r1, #192	; 0xc0
 80005ae:	0149      	lsls	r1, r1, #5
 80005b0:	430a      	orrs	r2, r1
 80005b2:	651a      	str	r2, [r3, #80]	; 0x50
  RCC->CSR |= RCC_CSR_LSEON; /* Enable Low Speed Internal Oscillator */
 80005b4:	4bd0      	ldr	r3, [pc, #832]	; (80008f8 <RTC_Init+0x374>)
 80005b6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80005b8:	4bcf      	ldr	r3, [pc, #828]	; (80008f8 <RTC_Init+0x374>)
 80005ba:	2180      	movs	r1, #128	; 0x80
 80005bc:	0049      	lsls	r1, r1, #1
 80005be:	430a      	orrs	r2, r1
 80005c0:	651a      	str	r2, [r3, #80]	; 0x50
  while ((RCC->CSR & (RCC_CSR_LSERDY)) != (RCC_CSR_LSERDY)) /* Wait for LSI Oscillator to stabilize */
 80005c2:	46c0      	nop			; (mov r8, r8)
 80005c4:	4bcc      	ldr	r3, [pc, #816]	; (80008f8 <RTC_Init+0x374>)
 80005c6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80005c8:	2380      	movs	r3, #128	; 0x80
 80005ca:	009b      	lsls	r3, r3, #2
 80005cc:	401a      	ands	r2, r3
 80005ce:	2380      	movs	r3, #128	; 0x80
 80005d0:	009b      	lsls	r3, r3, #2
 80005d2:	429a      	cmp	r2, r3
 80005d4:	d1f6      	bne.n	80005c4 <RTC_Init+0x40>
  {
  }
  RCC->CSR |= RCC_CSR_RTCEN; /* Enable RTC */
 80005d6:	4bc8      	ldr	r3, [pc, #800]	; (80008f8 <RTC_Init+0x374>)
 80005d8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80005da:	4bc7      	ldr	r3, [pc, #796]	; (80008f8 <RTC_Init+0x374>)
 80005dc:	2180      	movs	r1, #128	; 0x80
 80005de:	02c9      	lsls	r1, r1, #11
 80005e0:	430a      	orrs	r2, r1
 80005e2:	651a      	str	r2, [r3, #80]	; 0x50
  RCC->CSR &= ~(0x03 << 16); /* Clear RTC Oscillator Selection */
 80005e4:	4bc4      	ldr	r3, [pc, #784]	; (80008f8 <RTC_Init+0x374>)
 80005e6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80005e8:	4bc3      	ldr	r3, [pc, #780]	; (80008f8 <RTC_Init+0x374>)
 80005ea:	49c5      	ldr	r1, [pc, #788]	; (8000900 <RTC_Init+0x37c>)
 80005ec:	400a      	ands	r2, r1
 80005ee:	651a      	str	r2, [r3, #80]	; 0x50
  RCC->CSR |= RCC_CSR_RTCSEL_LSE; /* Select Low Speed Internal Oscillator as source for RTC */
 80005f0:	4bc1      	ldr	r3, [pc, #772]	; (80008f8 <RTC_Init+0x374>)
 80005f2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80005f4:	4bc0      	ldr	r3, [pc, #768]	; (80008f8 <RTC_Init+0x374>)
 80005f6:	2180      	movs	r1, #128	; 0x80
 80005f8:	0249      	lsls	r1, r1, #9
 80005fa:	430a      	orrs	r2, r1
 80005fc:	651a      	str	r2, [r3, #80]	; 0x50
  RCC->APB1ENR &= ~ RCC_APB1ENR_PWREN; /* Power Interface Clock Disable */
 80005fe:	4bbe      	ldr	r3, [pc, #760]	; (80008f8 <RTC_Init+0x374>)
 8000600:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8000602:	4bbd      	ldr	r3, [pc, #756]	; (80008f8 <RTC_Init+0x374>)
 8000604:	49bf      	ldr	r1, [pc, #764]	; (8000904 <RTC_Init+0x380>)
 8000606:	400a      	ands	r2, r1
 8000608:	639a      	str	r2, [r3, #56]	; 0x38

  uint8_t state = 0;
 800060a:	1dfb      	adds	r3, r7, #7
 800060c:	2200      	movs	r2, #0
 800060e:	701a      	strb	r2, [r3, #0]
  uint8_t HT = 0, HU = 0, MNT = 0, MNU = 0;
 8000610:	1dbb      	adds	r3, r7, #6
 8000612:	2200      	movs	r2, #0
 8000614:	701a      	strb	r2, [r3, #0]
 8000616:	1d7b      	adds	r3, r7, #5
 8000618:	2200      	movs	r2, #0
 800061a:	701a      	strb	r2, [r3, #0]
 800061c:	1d3b      	adds	r3, r7, #4
 800061e:	2200      	movs	r2, #0
 8000620:	701a      	strb	r2, [r3, #0]
 8000622:	1cfb      	adds	r3, r7, #3
 8000624:	2200      	movs	r2, #0
 8000626:	701a      	strb	r2, [r3, #0]
  if (RTC_INIT) {
    state = 5;
 8000628:	1dfb      	adds	r3, r7, #7
 800062a:	2205      	movs	r2, #5
 800062c:	701a      	strb	r2, [r3, #0]
    RTC->BKP0R = 0x00173700;
 800062e:	4bb6      	ldr	r3, [pc, #728]	; (8000908 <RTC_Init+0x384>)
 8000630:	4ab6      	ldr	r2, [pc, #728]	; (800090c <RTC_Init+0x388>)
 8000632:	651a      	str	r2, [r3, #80]	; 0x50
  }
  while (state == 0) {
 8000634:	e033      	b.n	800069e <RTC_Init+0x11a>
    if (HT < 2) {
 8000636:	1dbb      	adds	r3, r7, #6
 8000638:	781b      	ldrb	r3, [r3, #0]
 800063a:	2b01      	cmp	r3, #1
 800063c:	d805      	bhi.n	800064a <RTC_Init+0xc6>
      HT++;
 800063e:	1dbb      	adds	r3, r7, #6
 8000640:	781a      	ldrb	r2, [r3, #0]
 8000642:	1dbb      	adds	r3, r7, #6
 8000644:	3201      	adds	r2, #1
 8000646:	701a      	strb	r2, [r3, #0]
 8000648:	e002      	b.n	8000650 <RTC_Init+0xcc>
    } else {
      HT = 0;
 800064a:	1dbb      	adds	r3, r7, #6
 800064c:	2200      	movs	r2, #0
 800064e:	701a      	strb	r2, [r3, #0]
    }

    GPIO_State(GPIOB, 5, (HT & 0x01));
 8000650:	1dbb      	adds	r3, r7, #6
 8000652:	781b      	ldrb	r3, [r3, #0]
 8000654:	2201      	movs	r2, #1
 8000656:	4013      	ands	r3, r2
 8000658:	b2db      	uxtb	r3, r3
 800065a:	48ad      	ldr	r0, [pc, #692]	; (8000910 <RTC_Init+0x38c>)
 800065c:	001a      	movs	r2, r3
 800065e:	2105      	movs	r1, #5
 8000660:	f7ff ff34 	bl	80004cc <GPIO_State>
    GPIO_State(GPIOB, 6, (HT & 0x02));
 8000664:	1dbb      	adds	r3, r7, #6
 8000666:	781b      	ldrb	r3, [r3, #0]
 8000668:	2202      	movs	r2, #2
 800066a:	4013      	ands	r3, r2
 800066c:	b2db      	uxtb	r3, r3
 800066e:	48a8      	ldr	r0, [pc, #672]	; (8000910 <RTC_Init+0x38c>)
 8000670:	001a      	movs	r2, r3
 8000672:	2106      	movs	r1, #6
 8000674:	f7ff ff2a 	bl	80004cc <GPIO_State>
    Delay(1000);
 8000678:	23fa      	movs	r3, #250	; 0xfa
 800067a:	009b      	lsls	r3, r3, #2
 800067c:	0018      	movs	r0, r3
 800067e:	f7ff ff0d 	bl	800049c <Delay>
    if (BUTTON_PRESSED) {
 8000682:	23a0      	movs	r3, #160	; 0xa0
 8000684:	05db      	lsls	r3, r3, #23
 8000686:	691b      	ldr	r3, [r3, #16]
 8000688:	2204      	movs	r2, #4
 800068a:	4013      	ands	r3, r2
 800068c:	1dfa      	adds	r2, r7, #7
 800068e:	1df9      	adds	r1, r7, #7
 8000690:	7809      	ldrb	r1, [r1, #0]
 8000692:	7011      	strb	r1, [r2, #0]
 8000694:	2b00      	cmp	r3, #0
 8000696:	d102      	bne.n	800069e <RTC_Init+0x11a>
      state = 1;
 8000698:	1dfb      	adds	r3, r7, #7
 800069a:	2201      	movs	r2, #1
 800069c:	701a      	strb	r2, [r3, #0]
  while (state == 0) {
 800069e:	1dfb      	adds	r3, r7, #7
 80006a0:	781b      	ldrb	r3, [r3, #0]
 80006a2:	2b00      	cmp	r3, #0
 80006a4:	d0c7      	beq.n	8000636 <RTC_Init+0xb2>
    }
  }

  while (state == 1) {
 80006a6:	e04a      	b.n	800073e <RTC_Init+0x1ba>
    if (HU < 9) {
 80006a8:	1d7b      	adds	r3, r7, #5
 80006aa:	781b      	ldrb	r3, [r3, #0]
 80006ac:	2b08      	cmp	r3, #8
 80006ae:	d805      	bhi.n	80006bc <RTC_Init+0x138>
      HU++;
 80006b0:	1d7b      	adds	r3, r7, #5
 80006b2:	781a      	ldrb	r2, [r3, #0]
 80006b4:	1d7b      	adds	r3, r7, #5
 80006b6:	3201      	adds	r2, #1
 80006b8:	701a      	strb	r2, [r3, #0]
 80006ba:	e002      	b.n	80006c2 <RTC_Init+0x13e>
    } else {
      HU = 0;
 80006bc:	1d7b      	adds	r3, r7, #5
 80006be:	2200      	movs	r2, #0
 80006c0:	701a      	strb	r2, [r3, #0]
    }
    GPIO_State(GPIOB, 4, (HU & 0x01));
 80006c2:	1d7b      	adds	r3, r7, #5
 80006c4:	781b      	ldrb	r3, [r3, #0]
 80006c6:	2201      	movs	r2, #1
 80006c8:	4013      	ands	r3, r2
 80006ca:	b2db      	uxtb	r3, r3
 80006cc:	4890      	ldr	r0, [pc, #576]	; (8000910 <RTC_Init+0x38c>)
 80006ce:	001a      	movs	r2, r3
 80006d0:	2104      	movs	r1, #4
 80006d2:	f7ff fefb 	bl	80004cc <GPIO_State>
    GPIO_State(GPIOA, 8, (HU & 0x02));
 80006d6:	1d7b      	adds	r3, r7, #5
 80006d8:	781b      	ldrb	r3, [r3, #0]
 80006da:	2202      	movs	r2, #2
 80006dc:	4013      	ands	r3, r2
 80006de:	b2da      	uxtb	r2, r3
 80006e0:	23a0      	movs	r3, #160	; 0xa0
 80006e2:	05db      	lsls	r3, r3, #23
 80006e4:	2108      	movs	r1, #8
 80006e6:	0018      	movs	r0, r3
 80006e8:	f7ff fef0 	bl	80004cc <GPIO_State>
    GPIO_State(GPIOA, 0, (HU & 0x04));
 80006ec:	1d7b      	adds	r3, r7, #5
 80006ee:	781b      	ldrb	r3, [r3, #0]
 80006f0:	2204      	movs	r2, #4
 80006f2:	4013      	ands	r3, r2
 80006f4:	b2da      	uxtb	r2, r3
 80006f6:	23a0      	movs	r3, #160	; 0xa0
 80006f8:	05db      	lsls	r3, r3, #23
 80006fa:	2100      	movs	r1, #0
 80006fc:	0018      	movs	r0, r3
 80006fe:	f7ff fee5 	bl	80004cc <GPIO_State>
    GPIO_State(GPIOA, 1, (HU & 0x08));
 8000702:	1d7b      	adds	r3, r7, #5
 8000704:	781b      	ldrb	r3, [r3, #0]
 8000706:	2208      	movs	r2, #8
 8000708:	4013      	ands	r3, r2
 800070a:	b2da      	uxtb	r2, r3
 800070c:	23a0      	movs	r3, #160	; 0xa0
 800070e:	05db      	lsls	r3, r3, #23
 8000710:	2101      	movs	r1, #1
 8000712:	0018      	movs	r0, r3
 8000714:	f7ff feda 	bl	80004cc <GPIO_State>
    Delay(1000);
 8000718:	23fa      	movs	r3, #250	; 0xfa
 800071a:	009b      	lsls	r3, r3, #2
 800071c:	0018      	movs	r0, r3
 800071e:	f7ff febd 	bl	800049c <Delay>
    if (BUTTON_PRESSED) {
 8000722:	23a0      	movs	r3, #160	; 0xa0
 8000724:	05db      	lsls	r3, r3, #23
 8000726:	691b      	ldr	r3, [r3, #16]
 8000728:	2204      	movs	r2, #4
 800072a:	4013      	ands	r3, r2
 800072c:	1dfa      	adds	r2, r7, #7
 800072e:	1df9      	adds	r1, r7, #7
 8000730:	7809      	ldrb	r1, [r1, #0]
 8000732:	7011      	strb	r1, [r2, #0]
 8000734:	2b00      	cmp	r3, #0
 8000736:	d102      	bne.n	800073e <RTC_Init+0x1ba>
      state = 2;
 8000738:	1dfb      	adds	r3, r7, #7
 800073a:	2202      	movs	r2, #2
 800073c:	701a      	strb	r2, [r3, #0]
  while (state == 1) {
 800073e:	1dfb      	adds	r3, r7, #7
 8000740:	781b      	ldrb	r3, [r3, #0]
 8000742:	2b01      	cmp	r3, #1
 8000744:	d0b0      	beq.n	80006a8 <RTC_Init+0x124>
    }
  }

  while (state == 2) {
 8000746:	e03d      	b.n	80007c4 <RTC_Init+0x240>
    if (MNT < 6) {
 8000748:	1d3b      	adds	r3, r7, #4
 800074a:	781b      	ldrb	r3, [r3, #0]
 800074c:	2b05      	cmp	r3, #5
 800074e:	d805      	bhi.n	800075c <RTC_Init+0x1d8>
      MNT++;
 8000750:	1d3b      	adds	r3, r7, #4
 8000752:	781a      	ldrb	r2, [r3, #0]
 8000754:	1d3b      	adds	r3, r7, #4
 8000756:	3201      	adds	r2, #1
 8000758:	701a      	strb	r2, [r3, #0]
 800075a:	e002      	b.n	8000762 <RTC_Init+0x1de>
    } else {
      MNT = 0;
 800075c:	1d3b      	adds	r3, r7, #4
 800075e:	2200      	movs	r2, #0
 8000760:	701a      	strb	r2, [r3, #0]
    }

    GPIO_State(GPIOB, 3, (MNT & 0x01));
 8000762:	1d3b      	adds	r3, r7, #4
 8000764:	781b      	ldrb	r3, [r3, #0]
 8000766:	2201      	movs	r2, #1
 8000768:	4013      	ands	r3, r2
 800076a:	b2db      	uxtb	r3, r3
 800076c:	4868      	ldr	r0, [pc, #416]	; (8000910 <RTC_Init+0x38c>)
 800076e:	001a      	movs	r2, r3
 8000770:	2103      	movs	r1, #3
 8000772:	f7ff feab 	bl	80004cc <GPIO_State>
    GPIO_State(GPIOB, 1, (MNT & 0x02));
 8000776:	1d3b      	adds	r3, r7, #4
 8000778:	781b      	ldrb	r3, [r3, #0]
 800077a:	2202      	movs	r2, #2
 800077c:	4013      	ands	r3, r2
 800077e:	b2db      	uxtb	r3, r3
 8000780:	4863      	ldr	r0, [pc, #396]	; (8000910 <RTC_Init+0x38c>)
 8000782:	001a      	movs	r2, r3
 8000784:	2101      	movs	r1, #1
 8000786:	f7ff fea1 	bl	80004cc <GPIO_State>
    GPIO_State(GPIOB, 0, (MNT & 0x04));
 800078a:	1d3b      	adds	r3, r7, #4
 800078c:	781b      	ldrb	r3, [r3, #0]
 800078e:	2204      	movs	r2, #4
 8000790:	4013      	ands	r3, r2
 8000792:	b2db      	uxtb	r3, r3
 8000794:	485e      	ldr	r0, [pc, #376]	; (8000910 <RTC_Init+0x38c>)
 8000796:	001a      	movs	r2, r3
 8000798:	2100      	movs	r1, #0
 800079a:	f7ff fe97 	bl	80004cc <GPIO_State>
    Delay(1000);
 800079e:	23fa      	movs	r3, #250	; 0xfa
 80007a0:	009b      	lsls	r3, r3, #2
 80007a2:	0018      	movs	r0, r3
 80007a4:	f7ff fe7a 	bl	800049c <Delay>
    if (BUTTON_PRESSED) {
 80007a8:	23a0      	movs	r3, #160	; 0xa0
 80007aa:	05db      	lsls	r3, r3, #23
 80007ac:	691b      	ldr	r3, [r3, #16]
 80007ae:	2204      	movs	r2, #4
 80007b0:	4013      	ands	r3, r2
 80007b2:	1dfa      	adds	r2, r7, #7
 80007b4:	1df9      	adds	r1, r7, #7
 80007b6:	7809      	ldrb	r1, [r1, #0]
 80007b8:	7011      	strb	r1, [r2, #0]
 80007ba:	2b00      	cmp	r3, #0
 80007bc:	d102      	bne.n	80007c4 <RTC_Init+0x240>
      state = 3;
 80007be:	1dfb      	adds	r3, r7, #7
 80007c0:	2203      	movs	r2, #3
 80007c2:	701a      	strb	r2, [r3, #0]
  while (state == 2) {
 80007c4:	1dfb      	adds	r3, r7, #7
 80007c6:	781b      	ldrb	r3, [r3, #0]
 80007c8:	2b02      	cmp	r3, #2
 80007ca:	d0bd      	beq.n	8000748 <RTC_Init+0x1c4>
    }
  }

  while (state == 3) {
 80007cc:	e057      	b.n	800087e <RTC_Init+0x2fa>
    if (MNU < 9) {
 80007ce:	1cfb      	adds	r3, r7, #3
 80007d0:	781b      	ldrb	r3, [r3, #0]
 80007d2:	2b08      	cmp	r3, #8
 80007d4:	d805      	bhi.n	80007e2 <RTC_Init+0x25e>
      MNU++;
 80007d6:	1cfb      	adds	r3, r7, #3
 80007d8:	781a      	ldrb	r2, [r3, #0]
 80007da:	1cfb      	adds	r3, r7, #3
 80007dc:	3201      	adds	r2, #1
 80007de:	701a      	strb	r2, [r3, #0]
 80007e0:	e002      	b.n	80007e8 <RTC_Init+0x264>
    } else {
      MNU = 0;
 80007e2:	1cfb      	adds	r3, r7, #3
 80007e4:	2200      	movs	r2, #0
 80007e6:	701a      	strb	r2, [r3, #0]
    }

    GPIO_State(GPIOA, 15, (MNU & 0x01));
 80007e8:	1cfb      	adds	r3, r7, #3
 80007ea:	781b      	ldrb	r3, [r3, #0]
 80007ec:	2201      	movs	r2, #1
 80007ee:	4013      	ands	r3, r2
 80007f0:	b2da      	uxtb	r2, r3
 80007f2:	23a0      	movs	r3, #160	; 0xa0
 80007f4:	05db      	lsls	r3, r3, #23
 80007f6:	210f      	movs	r1, #15
 80007f8:	0018      	movs	r0, r3
 80007fa:	f7ff fe67 	bl	80004cc <GPIO_State>
    GPIO_State(GPIOA, 11, (MNU & 0x02));
 80007fe:	1cfb      	adds	r3, r7, #3
 8000800:	781b      	ldrb	r3, [r3, #0]
 8000802:	2202      	movs	r2, #2
 8000804:	4013      	ands	r3, r2
 8000806:	b2da      	uxtb	r2, r3
 8000808:	23a0      	movs	r3, #160	; 0xa0
 800080a:	05db      	lsls	r3, r3, #23
 800080c:	210b      	movs	r1, #11
 800080e:	0018      	movs	r0, r3
 8000810:	f7ff fe5c 	bl	80004cc <GPIO_State>
    GPIO_State(GPIOA, 10, (MNU & 0x04));
 8000814:	1cfb      	adds	r3, r7, #3
 8000816:	781b      	ldrb	r3, [r3, #0]
 8000818:	2204      	movs	r2, #4
 800081a:	4013      	ands	r3, r2
 800081c:	b2da      	uxtb	r2, r3
 800081e:	23a0      	movs	r3, #160	; 0xa0
 8000820:	05db      	lsls	r3, r3, #23
 8000822:	210a      	movs	r1, #10
 8000824:	0018      	movs	r0, r3
 8000826:	f7ff fe51 	bl	80004cc <GPIO_State>
    GPIO_State(GPIOA, 9, (MNU & 0x08));
 800082a:	1cfb      	adds	r3, r7, #3
 800082c:	781b      	ldrb	r3, [r3, #0]
 800082e:	2208      	movs	r2, #8
 8000830:	4013      	ands	r3, r2
 8000832:	b2da      	uxtb	r2, r3
 8000834:	23a0      	movs	r3, #160	; 0xa0
 8000836:	05db      	lsls	r3, r3, #23
 8000838:	2109      	movs	r1, #9
 800083a:	0018      	movs	r0, r3
 800083c:	f7ff fe46 	bl	80004cc <GPIO_State>
    Delay(1000);
 8000840:	23fa      	movs	r3, #250	; 0xfa
 8000842:	009b      	lsls	r3, r3, #2
 8000844:	0018      	movs	r0, r3
 8000846:	f7ff fe29 	bl	800049c <Delay>
    if (BUTTON_PRESSED) {
 800084a:	23a0      	movs	r3, #160	; 0xa0
 800084c:	05db      	lsls	r3, r3, #23
 800084e:	691b      	ldr	r3, [r3, #16]
 8000850:	2204      	movs	r2, #4
 8000852:	4013      	ands	r3, r2
 8000854:	d102      	bne.n	800085c <RTC_Init+0x2d8>
      state = 0;
 8000856:	1dfb      	adds	r3, r7, #7
 8000858:	2200      	movs	r2, #0
 800085a:	701a      	strb	r2, [r3, #0]
    }
    RTC->BKP0R = ((HT << 20) | (HU << 16) | (MNT << 12) | (MNU << 8)); /*  */
 800085c:	1dbb      	adds	r3, r7, #6
 800085e:	781b      	ldrb	r3, [r3, #0]
 8000860:	051a      	lsls	r2, r3, #20
 8000862:	1d7b      	adds	r3, r7, #5
 8000864:	781b      	ldrb	r3, [r3, #0]
 8000866:	041b      	lsls	r3, r3, #16
 8000868:	431a      	orrs	r2, r3
 800086a:	1d3b      	adds	r3, r7, #4
 800086c:	781b      	ldrb	r3, [r3, #0]
 800086e:	031b      	lsls	r3, r3, #12
 8000870:	431a      	orrs	r2, r3
 8000872:	1cfb      	adds	r3, r7, #3
 8000874:	781b      	ldrb	r3, [r3, #0]
 8000876:	021b      	lsls	r3, r3, #8
 8000878:	431a      	orrs	r2, r3
 800087a:	4b23      	ldr	r3, [pc, #140]	; (8000908 <RTC_Init+0x384>)
 800087c:	651a      	str	r2, [r3, #80]	; 0x50
  while (state == 3) {
 800087e:	1dfb      	adds	r3, r7, #7
 8000880:	781b      	ldrb	r3, [r3, #0]
 8000882:	2b03      	cmp	r3, #3
 8000884:	d0a3      	beq.n	80007ce <RTC_Init+0x24a>

  }
  RTC->WPR = 0xCA; /* Unlock write protection on all RTC registers */
 8000886:	4b20      	ldr	r3, [pc, #128]	; (8000908 <RTC_Init+0x384>)
 8000888:	22ca      	movs	r2, #202	; 0xca
 800088a:	625a      	str	r2, [r3, #36]	; 0x24
  RTC->WPR = 0x53; /* Unlock write protection on all RTC registers */
 800088c:	4b1e      	ldr	r3, [pc, #120]	; (8000908 <RTC_Init+0x384>)
 800088e:	2253      	movs	r2, #83	; 0x53
 8000890:	625a      	str	r2, [r3, #36]	; 0x24

  RTC->ISR = RTC_ISR_INIT; /* Allow Time to be edited, initialization mode enabled */
 8000892:	4b1d      	ldr	r3, [pc, #116]	; (8000908 <RTC_Init+0x384>)
 8000894:	2280      	movs	r2, #128	; 0x80
 8000896:	60da      	str	r2, [r3, #12]
  while ((RTC->ISR & (RTC_ISR_INITF)) != (RTC_ISR_INITF)) {
 8000898:	46c0      	nop			; (mov r8, r8)
 800089a:	4b1b      	ldr	r3, [pc, #108]	; (8000908 <RTC_Init+0x384>)
 800089c:	68db      	ldr	r3, [r3, #12]
 800089e:	2240      	movs	r2, #64	; 0x40
 80008a0:	4013      	ands	r3, r2
 80008a2:	2b40      	cmp	r3, #64	; 0x40
 80008a4:	d1f9      	bne.n	800089a <RTC_Init+0x316>
  }
  RTC->PRER = 0x007F00FF; /* Configure Prescaler: RTCCLK / (PREDIV_A + 1) = 32768kHz / 127 + 1 = 256Hz 256Hz / (PREDIV_S + 1) = 256 / 255 + 1 = 1Hz*/
 80008a6:	4b18      	ldr	r3, [pc, #96]	; (8000908 <RTC_Init+0x384>)
 80008a8:	4a1a      	ldr	r2, [pc, #104]	; (8000914 <RTC_Init+0x390>)
 80008aa:	611a      	str	r2, [r3, #16]
  RTC->TR = RTC->BKP0R; /*  */
 80008ac:	4a16      	ldr	r2, [pc, #88]	; (8000908 <RTC_Init+0x384>)
 80008ae:	4b16      	ldr	r3, [pc, #88]	; (8000908 <RTC_Init+0x384>)
 80008b0:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80008b2:	601a      	str	r2, [r3, #0]
  RTC->CR |= RTC_CR_FMT; /* 24-hour time format */
 80008b4:	4b14      	ldr	r3, [pc, #80]	; (8000908 <RTC_Init+0x384>)
 80008b6:	689a      	ldr	r2, [r3, #8]
 80008b8:	4b13      	ldr	r3, [pc, #76]	; (8000908 <RTC_Init+0x384>)
 80008ba:	2140      	movs	r1, #64	; 0x40
 80008bc:	430a      	orrs	r2, r1
 80008be:	609a      	str	r2, [r3, #8]
  RTC->CR |= RTC_CR_BYPSHAD;
 80008c0:	4b11      	ldr	r3, [pc, #68]	; (8000908 <RTC_Init+0x384>)
 80008c2:	689a      	ldr	r2, [r3, #8]
 80008c4:	4b10      	ldr	r3, [pc, #64]	; (8000908 <RTC_Init+0x384>)
 80008c6:	2120      	movs	r1, #32
 80008c8:	430a      	orrs	r2, r1
 80008ca:	609a      	str	r2, [r3, #8]

  RTC->ISR &= ~RTC_ISR_INIT; /* Initialization mode disabled */
 80008cc:	4b0e      	ldr	r3, [pc, #56]	; (8000908 <RTC_Init+0x384>)
 80008ce:	68da      	ldr	r2, [r3, #12]
 80008d0:	4b0d      	ldr	r3, [pc, #52]	; (8000908 <RTC_Init+0x384>)
 80008d2:	2180      	movs	r1, #128	; 0x80
 80008d4:	438a      	bics	r2, r1
 80008d6:	60da      	str	r2, [r3, #12]

  RTC->WPR = 0xFE; /* Lock write protection on all RTC registers */
 80008d8:	4b0b      	ldr	r3, [pc, #44]	; (8000908 <RTC_Init+0x384>)
 80008da:	22fe      	movs	r2, #254	; 0xfe
 80008dc:	625a      	str	r2, [r3, #36]	; 0x24
  RTC->WPR = 0x64; /* Lock write protection on all RTC registers */
 80008de:	4b0a      	ldr	r3, [pc, #40]	; (8000908 <RTC_Init+0x384>)
 80008e0:	2264      	movs	r2, #100	; 0x64
 80008e2:	625a      	str	r2, [r3, #36]	; 0x24

  PWR->CR &= ~ PWR_CR_DBP; /* Lock Access to CSR */
 80008e4:	4b05      	ldr	r3, [pc, #20]	; (80008fc <RTC_Init+0x378>)
 80008e6:	681a      	ldr	r2, [r3, #0]
 80008e8:	4b04      	ldr	r3, [pc, #16]	; (80008fc <RTC_Init+0x378>)
 80008ea:	490b      	ldr	r1, [pc, #44]	; (8000918 <RTC_Init+0x394>)
 80008ec:	400a      	ands	r2, r1
 80008ee:	601a      	str	r2, [r3, #0]

}
 80008f0:	46c0      	nop			; (mov r8, r8)
 80008f2:	46bd      	mov	sp, r7
 80008f4:	b002      	add	sp, #8
 80008f6:	bd80      	pop	{r7, pc}
 80008f8:	40021000 	.word	0x40021000
 80008fc:	40007000 	.word	0x40007000
 8000900:	fffcffff 	.word	0xfffcffff
 8000904:	efffffff 	.word	0xefffffff
 8000908:	40002800 	.word	0x40002800
 800090c:	00173700 	.word	0x00173700
 8000910:	50000400 	.word	0x50000400
 8000914:	007f00ff 	.word	0x007f00ff
 8000918:	fffffeff 	.word	0xfffffeff

0800091c <SystemClockConfig>:

void SystemClockConfig(void) {
 800091c:	b580      	push	{r7, lr}
 800091e:	af00      	add	r7, sp, #0
  RCC->CR |= RCC_CR_HSIDIVEN;
 8000920:	4b24      	ldr	r3, [pc, #144]	; (80009b4 <SystemClockConfig+0x98>)
 8000922:	681a      	ldr	r2, [r3, #0]
 8000924:	4b23      	ldr	r3, [pc, #140]	; (80009b4 <SystemClockConfig+0x98>)
 8000926:	2108      	movs	r1, #8
 8000928:	430a      	orrs	r2, r1
 800092a:	601a      	str	r2, [r3, #0]
  RCC->CR |= RCC_CR_HSION; /* Enable High speed internal oscillator */
 800092c:	4b21      	ldr	r3, [pc, #132]	; (80009b4 <SystemClockConfig+0x98>)
 800092e:	681a      	ldr	r2, [r3, #0]
 8000930:	4b20      	ldr	r3, [pc, #128]	; (80009b4 <SystemClockConfig+0x98>)
 8000932:	2101      	movs	r1, #1
 8000934:	430a      	orrs	r2, r1
 8000936:	601a      	str	r2, [r3, #0]
  while ((RCC->CR & RCC_CR_HSIRDY) == 0) { /* Wait for HSI to become stable */
 8000938:	46c0      	nop			; (mov r8, r8)
 800093a:	4b1e      	ldr	r3, [pc, #120]	; (80009b4 <SystemClockConfig+0x98>)
 800093c:	681b      	ldr	r3, [r3, #0]
 800093e:	2204      	movs	r2, #4
 8000940:	4013      	ands	r3, r2
 8000942:	d0fa      	beq.n	800093a <SystemClockConfig+0x1e>
  }

  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000944:	4b1b      	ldr	r3, [pc, #108]	; (80009b4 <SystemClockConfig+0x98>)
 8000946:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8000948:	4b1a      	ldr	r3, [pc, #104]	; (80009b4 <SystemClockConfig+0x98>)
 800094a:	2180      	movs	r1, #128	; 0x80
 800094c:	0549      	lsls	r1, r1, #21
 800094e:	430a      	orrs	r2, r1
 8000950:	639a      	str	r2, [r3, #56]	; 0x38
  PWR->CR |= PWR_CR_VOS;
 8000952:	4b19      	ldr	r3, [pc, #100]	; (80009b8 <SystemClockConfig+0x9c>)
 8000954:	681a      	ldr	r2, [r3, #0]
 8000956:	4b18      	ldr	r3, [pc, #96]	; (80009b8 <SystemClockConfig+0x9c>)
 8000958:	21c0      	movs	r1, #192	; 0xc0
 800095a:	0149      	lsls	r1, r1, #5
 800095c:	430a      	orrs	r2, r1
 800095e:	601a      	str	r2, [r3, #0]

  RCC->CFGR &= ~RCC_CFGR_SW; /* Reset System Clock Switch */
 8000960:	4b14      	ldr	r3, [pc, #80]	; (80009b4 <SystemClockConfig+0x98>)
 8000962:	68da      	ldr	r2, [r3, #12]
 8000964:	4b13      	ldr	r3, [pc, #76]	; (80009b4 <SystemClockConfig+0x98>)
 8000966:	2103      	movs	r1, #3
 8000968:	438a      	bics	r2, r1
 800096a:	60da      	str	r2, [r3, #12]
  RCC->CFGR |= RCC_CFGR_SW_HSI; /* System Clock Switch set to HSI16 */
 800096c:	4b11      	ldr	r3, [pc, #68]	; (80009b4 <SystemClockConfig+0x98>)
 800096e:	68da      	ldr	r2, [r3, #12]
 8000970:	4b10      	ldr	r3, [pc, #64]	; (80009b4 <SystemClockConfig+0x98>)
 8000972:	2101      	movs	r1, #1
 8000974:	430a      	orrs	r2, r1
 8000976:	60da      	str	r2, [r3, #12]
  while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI)
 8000978:	46c0      	nop			; (mov r8, r8)
 800097a:	4b0e      	ldr	r3, [pc, #56]	; (80009b4 <SystemClockConfig+0x98>)
 800097c:	68db      	ldr	r3, [r3, #12]
 800097e:	220c      	movs	r2, #12
 8000980:	4013      	ands	r3, r2
 8000982:	2b04      	cmp	r3, #4
 8000984:	d1f9      	bne.n	800097a <SystemClockConfig+0x5e>
    ;
  RCC->CFGR |= RCC_CFGR_MCOPRE_DIV16;
 8000986:	4b0b      	ldr	r3, [pc, #44]	; (80009b4 <SystemClockConfig+0x98>)
 8000988:	68da      	ldr	r2, [r3, #12]
 800098a:	4b0a      	ldr	r3, [pc, #40]	; (80009b4 <SystemClockConfig+0x98>)
 800098c:	2180      	movs	r1, #128	; 0x80
 800098e:	05c9      	lsls	r1, r1, #23
 8000990:	430a      	orrs	r2, r1
 8000992:	60da      	str	r2, [r3, #12]
  RCC->CFGR |= RCC_CFGR_MCOSEL_HSI; /* Set HSI Oscillator as Microcontroller Clock */
 8000994:	4b07      	ldr	r3, [pc, #28]	; (80009b4 <SystemClockConfig+0x98>)
 8000996:	68da      	ldr	r2, [r3, #12]
 8000998:	4b06      	ldr	r3, [pc, #24]	; (80009b4 <SystemClockConfig+0x98>)
 800099a:	2180      	movs	r1, #128	; 0x80
 800099c:	0489      	lsls	r1, r1, #18
 800099e:	430a      	orrs	r2, r1
 80009a0:	60da      	str	r2, [r3, #12]
  RCC->APB1ENR &= ~ RCC_APB1ENR_PWREN; /* Power Interface Clock Disable */
 80009a2:	4b04      	ldr	r3, [pc, #16]	; (80009b4 <SystemClockConfig+0x98>)
 80009a4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80009a6:	4b03      	ldr	r3, [pc, #12]	; (80009b4 <SystemClockConfig+0x98>)
 80009a8:	4904      	ldr	r1, [pc, #16]	; (80009bc <SystemClockConfig+0xa0>)
 80009aa:	400a      	ands	r2, r1
 80009ac:	639a      	str	r2, [r3, #56]	; 0x38

}
 80009ae:	46c0      	nop			; (mov r8, r8)
 80009b0:	46bd      	mov	sp, r7
 80009b2:	bd80      	pop	{r7, pc}
 80009b4:	40021000 	.word	0x40021000
 80009b8:	40007000 	.word	0x40007000
 80009bc:	efffffff 	.word	0xefffffff

080009c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80009c0:	480d      	ldr	r0, [pc, #52]	; (80009f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80009c2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80009c4:	e000      	b.n	80009c8 <Reset_Handler+0x8>
 80009c6:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80009c8:	480c      	ldr	r0, [pc, #48]	; (80009fc <LoopForever+0x6>)
  ldr r1, =_edata
 80009ca:	490d      	ldr	r1, [pc, #52]	; (8000a00 <LoopForever+0xa>)
  ldr r2, =_sidata
 80009cc:	4a0d      	ldr	r2, [pc, #52]	; (8000a04 <LoopForever+0xe>)
  movs r3, #0
 80009ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80009d0:	e002      	b.n	80009d8 <LoopCopyDataInit>

080009d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80009d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80009d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80009d6:	3304      	adds	r3, #4

080009d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80009d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80009da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80009dc:	d3f9      	bcc.n	80009d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80009de:	4a0a      	ldr	r2, [pc, #40]	; (8000a08 <LoopForever+0x12>)
  ldr r4, =_ebss
 80009e0:	4c0a      	ldr	r4, [pc, #40]	; (8000a0c <LoopForever+0x16>)
  movs r3, #0
 80009e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80009e4:	e001      	b.n	80009ea <LoopFillZerobss>

080009e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80009e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80009e8:	3204      	adds	r2, #4

080009ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80009ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80009ec:	d3fb      	bcc.n	80009e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80009ee:	f000 f811 	bl	8000a14 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80009f2:	f7ff fb85 	bl	8000100 <main>

080009f6 <LoopForever>:

LoopForever:
  b LoopForever
 80009f6:	e7fe      	b.n	80009f6 <LoopForever>
  ldr   r0, =_estack
 80009f8:	20000800 	.word	0x20000800
  ldr r0, =_sdata
 80009fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000a00:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000a04:	08000a7c 	.word	0x08000a7c
  ldr r2, =_sbss
 8000a08:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000a0c:	2000001c 	.word	0x2000001c

08000a10 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000a10:	e7fe      	b.n	8000a10 <ADC_IRQHandler>
	...

08000a14 <__libc_init_array>:
 8000a14:	b570      	push	{r4, r5, r6, lr}
 8000a16:	2600      	movs	r6, #0
 8000a18:	4d0c      	ldr	r5, [pc, #48]	; (8000a4c <__libc_init_array+0x38>)
 8000a1a:	4c0d      	ldr	r4, [pc, #52]	; (8000a50 <__libc_init_array+0x3c>)
 8000a1c:	1b64      	subs	r4, r4, r5
 8000a1e:	10a4      	asrs	r4, r4, #2
 8000a20:	42a6      	cmp	r6, r4
 8000a22:	d109      	bne.n	8000a38 <__libc_init_array+0x24>
 8000a24:	2600      	movs	r6, #0
 8000a26:	f000 f819 	bl	8000a5c <_init>
 8000a2a:	4d0a      	ldr	r5, [pc, #40]	; (8000a54 <__libc_init_array+0x40>)
 8000a2c:	4c0a      	ldr	r4, [pc, #40]	; (8000a58 <__libc_init_array+0x44>)
 8000a2e:	1b64      	subs	r4, r4, r5
 8000a30:	10a4      	asrs	r4, r4, #2
 8000a32:	42a6      	cmp	r6, r4
 8000a34:	d105      	bne.n	8000a42 <__libc_init_array+0x2e>
 8000a36:	bd70      	pop	{r4, r5, r6, pc}
 8000a38:	00b3      	lsls	r3, r6, #2
 8000a3a:	58eb      	ldr	r3, [r5, r3]
 8000a3c:	4798      	blx	r3
 8000a3e:	3601      	adds	r6, #1
 8000a40:	e7ee      	b.n	8000a20 <__libc_init_array+0xc>
 8000a42:	00b3      	lsls	r3, r6, #2
 8000a44:	58eb      	ldr	r3, [r5, r3]
 8000a46:	4798      	blx	r3
 8000a48:	3601      	adds	r6, #1
 8000a4a:	e7f2      	b.n	8000a32 <__libc_init_array+0x1e>
 8000a4c:	08000a74 	.word	0x08000a74
 8000a50:	08000a74 	.word	0x08000a74
 8000a54:	08000a74 	.word	0x08000a74
 8000a58:	08000a78 	.word	0x08000a78

08000a5c <_init>:
 8000a5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a5e:	46c0      	nop			; (mov r8, r8)
 8000a60:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a62:	bc08      	pop	{r3}
 8000a64:	469e      	mov	lr, r3
 8000a66:	4770      	bx	lr

08000a68 <_fini>:
 8000a68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a6a:	46c0      	nop			; (mov r8, r8)
 8000a6c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a6e:	bc08      	pop	{r3}
 8000a70:	469e      	mov	lr, r3
 8000a72:	4770      	bx	lr
